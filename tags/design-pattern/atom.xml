<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
    <title> - design_pattern</title>
    <link rel="self" type="application/atom+xml" href="https://wonkwh.github.io/tags/design-pattern/atom.xml"/>
    <link rel="alternate" type="text/html" href="https://wonkwh.github.io"/>
    <generator uri="https://www.getzola.org/">Zola</generator>
    <updated>2024-02-22T00:00:00+00:00</updated>
    <id>https://wonkwh.github.io/tags/design-pattern/atom.xml</id>
    <entry xml:lang="en">
        <title>Swinject Tutorial for iOS</title>
        <published>2024-02-22T00:00:00+00:00</published>
        <updated>2024-02-22T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://wonkwh.github.io/swininjecttutorial/"/>
        <id>https://wonkwh.github.io/swininjecttutorial/</id>
        
        <summary type="html">&lt;ul&gt;
&lt;li&gt;원문: https:&#x2F;&#x2F;www.kodeco.com&#x2F;17-swinject-tutorial-for-ios-getting-started&lt;&#x2F;li&gt;
&lt;li&gt;이 튜토리얼에서는 Swift로 작성된 의존성 주입 프레임워크인 Swinject를 통해 의존성 주입(DI)의 개념에 대해 알아본다&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</summary>
        
    </entry>
    <entry xml:lang="en">
        <title>Refactoring Massive App Delegate</title>
        <published>2021-02-01T00:00:00+00:00</published>
        <updated>2021-02-01T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://wonkwh.github.io/refactoringappdelegate/"/>
        <id>https://wonkwh.github.io/refactoringappdelegate/</id>
        
        <summary type="html">&lt;h2 id=&quot;refactoring-massive-app-delegate&quot;&gt;Refactoring Massive App Delegate&lt;&#x2F;h2&gt;
&lt;p&gt;실제 production app 을 개발하다 보면 &lt;code&gt;AppDelegate&lt;&#x2F;code&gt; 클래스가 쉽게 비대해지고 파일수가 어마어마하게 늘어나는 경우가 비일비재하다. 이를 refactoring 하는 방법&lt;&#x2F;p&gt;
</summary>
        
    </entry>
</feed>
